version: '3.5'

services:
  app:
    build:
      context: .
      # dockerfile: app.Dockerfile
    command: bash -c "bundle exec puma -C config/puma.rb"
    environment:
      WEB_CONCURRENCY: 8
      RAILS_ENV: development
      # RAILS_ENV: production
      DB_HOST: postgres
      REDIS_URL: redis://redis:6379
      PEER_HOST: host.docker.internal:7051
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - ../fabric-samples:/fabric-samples
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres

  worker:
    build:
      context: .
      # dockerfile: app.Dockerfile
    command: bash -c "bundle exec sidekiq"
    environment:
      WEB_CONCURRENCY: 8
      RAILS_ENV: production
      DB_HOST: postgres
      REDIS_URL: redis://redis:6379
      PEER_HOST: host.docker.internal:7051
    volumes:
      - .:/app
      - ../fabric-samples:/fabric-samples
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ais
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    # networks:
    #   - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    # networks:
    #   - postgres
    restart: unless-stopped

  redis:
    image: "redis:alpine"    
    ports:
      - "6379:6379"

# networks:
#   postgres:
#     driver: bridge

volumes:
    postgres:
    pgadmin: