#Create a new server block to rewrite http to https
server {
  listen 80;
  listen [::]:80;
  #Add the rewrite directive as below
  return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/ssl-cert/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl-cert/privkey.pem;
    server_name ais.h-1.localhost;
    location / {
        proxy_pass http://host.docker.internal:3000;
        #Optional configuration
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header client-ip $remote_addr;
    }
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/ssl-cert/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl-cert/privkey.pem;
    server_name database.h-1.localhost;
    location / {
        proxy_pass http://host.docker.internal:5050;
        #Optional configuration
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header client-ip $remote_addr;
    }
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/ssl-cert/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl-cert/privkey.pem;
    server_name blockchain-fakultas-a.h-1.localhost;
    location / {
        proxy_pass http://host.docker.internal:8081;
        #Optional configuration
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header client-ip $remote_addr;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/ssl-cert/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl-cert/privkey.pem;
    server_name blockchain-fakultas-b.h-1.localhost;
    location / {
        proxy_pass http://host.docker.internal:8081;
        #Optional configuration
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header client-ip $remote_addr;
    }
}